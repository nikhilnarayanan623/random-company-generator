basePath: /api/v1
definitions:
  request.CompanyRequest:
    properties:
      ceo_name:
        maxLength: 25
        minLength: 3
        type: string
      company_name:
        maxLength: 15
        minLength: 3
        type: string
      total_employees:
        maximum: 5000
        minimum: 100
        type: integer
    required:
    - ceo_name
    - company_name
    - total_employees
    type: object
  request.SignIn:
    properties:
      email:
        type: string
      password:
        maxLength: 25
        minLength: 6
        type: string
    required:
    - email
    type: object
  request.SignUp:
    properties:
      email:
        type: string
      password:
        maxLength: 25
        minLength: 6
        type: string
    required:
    - email
    type: object
  response.Company:
    properties:
      ceo:
        $ref: '#/definitions/response.Employee'
      departments:
        items:
          $ref: '#/definitions/response.Department'
        type: array
      industry:
        type: string
      name:
        type: string
      totalEmployees:
        type: integer
    type: object
  response.Department:
    properties:
      leader:
        $ref: '#/definitions/response.Employee'
      name:
        type: string
      teams:
        items:
          $ref: '#/definitions/response.Team'
        type: array
      totalEmployees:
        type: integer
    type: object
  response.Employee:
    properties:
      age:
        type: integer
      email:
        type: string
      hireDate:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
      salary:
        type: number
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
      success:
        type: boolean
    type: object
  response.SignIn:
    properties:
      access_token:
        type: string
      expire_at:
        type: string
    type: object
  response.SignUp:
    properties:
      user_id:
        type: string
    type: object
  response.Team:
    properties:
      manager:
        $ref: '#/definitions/response.Employee'
      members:
        items:
          $ref: '#/definitions/response.Employee'
        type: array
      name:
        type: string
      totalEmployees:
        type: integer
    type: object
info:
  contact: {}
  description: This project generates random company details based on user input.
    It consists of an API Gateway, an Authentication Service, and a Company Service,
    each serving a specific purpose in the system.
  title: Random Company Generator Microservices
paths:
  /auth/sign-in:
    post:
      description: API For User To Sign In
      operationId: User SignIn
      parameters:
      - description: Sign In Details
        in: body
        name: inputs
        required: true
        schema:
          $ref: '#/definitions/request.SignIn'
      responses:
        "200":
          description: Successfully Sign In Completed
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SignIn'
              type: object
        "400":
          description: Invalid Inputs
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: User Not Exist With This Details
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Sign In
      tags:
      - Authentication
  /auth/sign-up:
    post:
      description: API For User To Sign Up
      operationId: User SignUp
      parameters:
      - description: Sign Up Details
        in: body
        name: inputs
        required: true
        schema:
          $ref: '#/definitions/request.SignUp'
      responses:
        "200":
          description: Successfully Sign Up Completed
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SignUp'
              type: object
        "400":
          description: Invalid Inputs
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: User Already Exist
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Sign Up
      tags:
      - Authentication
  /company:
    post:
      description: API For User To Create Random Company Details
      operationId: Company Create
      parameters:
      - description: Company Create Details
        in: body
        name: inputs
        required: true
        schema:
          $ref: '#/definitions/request.CompanyRequest'
      responses:
        "200":
          description: Successfully Company Details Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.Company'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Random Company Creating
      tags:
      - Company
securityDefinitions:
  BearerAuth:
    description: Add prefix of Bearer before token. For example, "Bearer token".
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
